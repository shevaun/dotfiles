# git aliases

alias ga='git add '
alias gaa="git add -A"
alias gb='git switch -c '
alias gca='git commit -a '
alias gco='git checkout'
alias gl="git smart-log"
alias gm='git merge '
alias gp="git push"
alias gs="git status"
alias gbk="git buildkite"
alias grh="git reset --hard"

function gc() {
  git commit -m "$*"
}

function gup() {
  log=$(git -c color.diff=always pull)
  echo $log
  if echo $log | grep -q Gemfile.lock; then
    echo "Gemfile.lock changed, running bundle install"
    bundle install
  fi
  if echo $log | grep -q db/; then
    echo "db changed, running rails db:migrate"
    rails db:prepare db:seed
  fi
  if echo $log | grep -q yarn.lock; then
    echo "yarn.lock changed, running yarn"
    yarn
    pushd frontend > /dev/null
    yarn
    popd > /dev/null
  fi
  if echo $log | grep -q frontend/vendor/emojis; then
    echo "emojis updated, running git submodule update"
    git submodule update --init
  fi
}

# return the first param unless it is empty, then return second param
function var_or_default(){
  if [ -z "$1" ]; then
    echo $2
  else
    echo $1
  fi
}

# Get edited files as listed from git, list spec files, grab file path, stat files for last modified time, sort by most recent, grab first, return file path.
alias rs='git status --porcelain | grep _spec.rb | sed -E "s/ ?[A-Z?]+ +([a-zA-Z_./]+ -> )?//" | xargs stat -f "%m %N" | sort -rn | head -1 | cut -wf2'

# Get most recently edited spec file, find line number of "#runthis"
alias rtls='grep -n "#runthis" $(rs) | cut -d : -f 1 | head -n 1' # this has a bug which makes it hang if there is no recently edited spec

# Combine most recently edited spec file and line number of "#runthis"
alias rts='echo "$(rs):$(rtls)"'

# Get list of all spec files changed since origin/main
alias rrs='{ git diff --name-only origin/main & git ls-files --others --exclude-standard; } | grep _spec.rb | xargs stat -f "%m %N" 2> /dev/null | sort -rn | cut -wf2'

# Run most recently edited spec file
alias r='echo rspec $(var_or_default "$(rs)" "$(rrs)"); rspec $(var_or_default "$(rs)" "$(rrs)")'

# Run most recently edited spec file at first line with "#runthis"
alias rt='echo rspec $(var_or_default "$(rts)" "$(rrs)"); rspec $(var_or_default "$(rts)" "$(rrs)")'

# Run most recently edited spec file
alias rr='echo rspec $(rrs); rspec $(rrs)'

#alias fixup="!f() { TARGET=$(git rev-parse "$1"); git commit --fixup=$TARGET ${@:2} && EDITOR=true git rebase -i --autostash --autosquash $TARGET^; }; f"
